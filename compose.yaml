networks:
  back-end:
    driver: bridge

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name:
      api
    environment:
      - LOG_REPOSITORY_PATH=${LOG_REPOSITORY_PATH:-logs/api}
    ports:
      - '8080:8080'
    networks:
      - back-end
    depends_on:
      - postgres
      - redis
    volumes:
      - app-logs:/logs/api/
  postgres:
    image: postgres:17-alpine
    environment:
      - POSTGRES_DB=database
      - POSTGRES_PASSWORD=secret
      - POSTGRES_USER=postgres
    ports:
      - '5432:5432'
    networks:
      - back-end
  redis:
    image: redis:7.0.15-alpine
    ports:
      - '6379:6379'
    networks:
      - back-end
  prometheus:
    image: prom/prometheus:v3.0.1
    ports:
      - '9090:9090'
    networks:
      - back-end
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - api
  grafana:
    image: grafana/grafana:11.4.0
    container_name: grafana
    restart: unless-stopped
    #environment:
      #- GF_SERVER_ROOT_URL=http://my.grafana.server/
      #- GF_INSTALL_PLUGINS=grafana-clock-panel
    ports:
      - '3000:3000'
    volumes:
      - grafana_storage:/var/lib/grafana
      - ./docker/grafana:/etc/grafana/provisioning/datasources:ro
    networks:
      - back-end
    depends_on:
      - loki
  loki:
    image: grafana/loki:3.3.2
    ports:
      - '3100:3100'
    command:
      - -config.file=/etc/loki/local-config.yaml
      - -print-config-stderr=true
    networks:
      - back-end
  promtail:
    image: grafana/promtail:3.3.2
    networks:
      - back-end
    ports:
      - '9080:9080'
    depends_on:
      - loki
      - api
    volumes:
      - ./docker/promtail/config/config.yaml:/etc/promtail/config.yml
      - app-logs:/logs/api/
      - './docker/promtail/positions:/positions'
      - /var/log:/logs/syslogs

volumes:
  grafana_storage:
  app-logs: